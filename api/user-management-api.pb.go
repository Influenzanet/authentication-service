// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user-management-api.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type User struct {
	Id                   string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Account              *User_Account       `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Roles                []string            `protobuf:"bytes,3,rep,name=roles,proto3" json:"roles,omitempty"`
	Timestamps           *User_Timestamps    `protobuf:"bytes,4,opt,name=timestamps,proto3" json:"timestamps,omitempty"`
	Profiles             []*Profile          `protobuf:"bytes,5,rep,name=profiles,proto3" json:"profiles,omitempty"`
	ContactPreferences   *ContactPreferences `protobuf:"bytes,6,opt,name=contact_preferences,json=contactPreferences,proto3" json:"contact_preferences,omitempty"`
	ContactInfos         []*ContactInfo      `protobuf:"bytes,7,rep,name=contact_infos,json=contactInfos,proto3" json:"contact_infos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_23188efcd8e5ff27, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetAccount() *User_Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *User) GetRoles() []string {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *User) GetTimestamps() *User_Timestamps {
	if m != nil {
		return m.Timestamps
	}
	return nil
}

func (m *User) GetProfiles() []*Profile {
	if m != nil {
		return m.Profiles
	}
	return nil
}

func (m *User) GetContactPreferences() *ContactPreferences {
	if m != nil {
		return m.ContactPreferences
	}
	return nil
}

func (m *User) GetContactInfos() []*ContactInfo {
	if m != nil {
		return m.ContactInfos
	}
	return nil
}

type User_Account struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	AccountId            string   `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AccountConfirmedAt   int64    `protobuf:"varint,3,opt,name=account_confirmed_at,json=accountConfirmedAt,proto3" json:"account_confirmed_at,omitempty"`
	PreferredLanguage    string   `protobuf:"bytes,4,opt,name=preferred_language,json=preferredLanguage,proto3" json:"preferred_language,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User_Account) Reset()         { *m = User_Account{} }
func (m *User_Account) String() string { return proto.CompactTextString(m) }
func (*User_Account) ProtoMessage()    {}
func (*User_Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_23188efcd8e5ff27, []int{0, 0}
}

func (m *User_Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User_Account.Unmarshal(m, b)
}
func (m *User_Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User_Account.Marshal(b, m, deterministic)
}
func (m *User_Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User_Account.Merge(m, src)
}
func (m *User_Account) XXX_Size() int {
	return xxx_messageInfo_User_Account.Size(m)
}
func (m *User_Account) XXX_DiscardUnknown() {
	xxx_messageInfo_User_Account.DiscardUnknown(m)
}

var xxx_messageInfo_User_Account proto.InternalMessageInfo

func (m *User_Account) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *User_Account) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *User_Account) GetAccountConfirmedAt() int64 {
	if m != nil {
		return m.AccountConfirmedAt
	}
	return 0
}

func (m *User_Account) GetPreferredLanguage() string {
	if m != nil {
		return m.PreferredLanguage
	}
	return ""
}

type User_Timestamps struct {
	CreatedAt            int64    `protobuf:"varint,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            int64    `protobuf:"varint,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	LastLogin            int64    `protobuf:"varint,3,opt,name=last_login,json=lastLogin,proto3" json:"last_login,omitempty"`
	LastTokenRefresh     int64    `protobuf:"varint,4,opt,name=last_token_refresh,json=lastTokenRefresh,proto3" json:"last_token_refresh,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User_Timestamps) Reset()         { *m = User_Timestamps{} }
func (m *User_Timestamps) String() string { return proto.CompactTextString(m) }
func (*User_Timestamps) ProtoMessage()    {}
func (*User_Timestamps) Descriptor() ([]byte, []int) {
	return fileDescriptor_23188efcd8e5ff27, []int{0, 1}
}

func (m *User_Timestamps) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User_Timestamps.Unmarshal(m, b)
}
func (m *User_Timestamps) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User_Timestamps.Marshal(b, m, deterministic)
}
func (m *User_Timestamps) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User_Timestamps.Merge(m, src)
}
func (m *User_Timestamps) XXX_Size() int {
	return xxx_messageInfo_User_Timestamps.Size(m)
}
func (m *User_Timestamps) XXX_DiscardUnknown() {
	xxx_messageInfo_User_Timestamps.DiscardUnknown(m)
}

var xxx_messageInfo_User_Timestamps proto.InternalMessageInfo

func (m *User_Timestamps) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *User_Timestamps) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *User_Timestamps) GetLastLogin() int64 {
	if m != nil {
		return m.LastLogin
	}
	return 0
}

func (m *User_Timestamps) GetLastTokenRefresh() int64 {
	if m != nil {
		return m.LastTokenRefresh
	}
	return 0
}

type ContactInfo struct {
	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type        string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	ConfirmedAt int64  `protobuf:"varint,3,opt,name=confirmed_at,json=confirmedAt,proto3" json:"confirmed_at,omitempty"`
	// Types that are valid to be assigned to Address:
	//	*ContactInfo_Email
	//	*ContactInfo_Phone
	Address              isContactInfo_Address `protobuf_oneof:"address"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ContactInfo) Reset()         { *m = ContactInfo{} }
func (m *ContactInfo) String() string { return proto.CompactTextString(m) }
func (*ContactInfo) ProtoMessage()    {}
func (*ContactInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_23188efcd8e5ff27, []int{1}
}

func (m *ContactInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContactInfo.Unmarshal(m, b)
}
func (m *ContactInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContactInfo.Marshal(b, m, deterministic)
}
func (m *ContactInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactInfo.Merge(m, src)
}
func (m *ContactInfo) XXX_Size() int {
	return xxx_messageInfo_ContactInfo.Size(m)
}
func (m *ContactInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ContactInfo proto.InternalMessageInfo

func (m *ContactInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ContactInfo) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ContactInfo) GetConfirmedAt() int64 {
	if m != nil {
		return m.ConfirmedAt
	}
	return 0
}

type isContactInfo_Address interface {
	isContactInfo_Address()
}

type ContactInfo_Email struct {
	Email string `protobuf:"bytes,4,opt,name=email,proto3,oneof"`
}

type ContactInfo_Phone struct {
	Phone string `protobuf:"bytes,5,opt,name=phone,proto3,oneof"`
}

func (*ContactInfo_Email) isContactInfo_Address() {}

func (*ContactInfo_Phone) isContactInfo_Address() {}

func (m *ContactInfo) GetAddress() isContactInfo_Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *ContactInfo) GetEmail() string {
	if x, ok := m.GetAddress().(*ContactInfo_Email); ok {
		return x.Email
	}
	return ""
}

func (m *ContactInfo) GetPhone() string {
	if x, ok := m.GetAddress().(*ContactInfo_Phone); ok {
		return x.Phone
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ContactInfo) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ContactInfo_Email)(nil),
		(*ContactInfo_Phone)(nil),
	}
}

type ContactPreferences struct {
	SubscribedToNewletter bool     `protobuf:"varint,1,opt,name=subscribed_to_newletter,json=subscribedToNewletter,proto3" json:"subscribed_to_newletter,omitempty"`
	SendNewsletterTo      []string `protobuf:"bytes,2,rep,name=send_newsletter_to,json=sendNewsletterTo,proto3" json:"send_newsletter_to,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *ContactPreferences) Reset()         { *m = ContactPreferences{} }
func (m *ContactPreferences) String() string { return proto.CompactTextString(m) }
func (*ContactPreferences) ProtoMessage()    {}
func (*ContactPreferences) Descriptor() ([]byte, []int) {
	return fileDescriptor_23188efcd8e5ff27, []int{2}
}

func (m *ContactPreferences) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContactPreferences.Unmarshal(m, b)
}
func (m *ContactPreferences) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContactPreferences.Marshal(b, m, deterministic)
}
func (m *ContactPreferences) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactPreferences.Merge(m, src)
}
func (m *ContactPreferences) XXX_Size() int {
	return xxx_messageInfo_ContactPreferences.Size(m)
}
func (m *ContactPreferences) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactPreferences.DiscardUnknown(m)
}

var xxx_messageInfo_ContactPreferences proto.InternalMessageInfo

func (m *ContactPreferences) GetSubscribedToNewletter() bool {
	if m != nil {
		return m.SubscribedToNewletter
	}
	return false
}

func (m *ContactPreferences) GetSendNewsletterTo() []string {
	if m != nil {
		return m.SendNewsletterTo
	}
	return nil
}

type SignupWithEmailMsg struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	InstanceId           string   `protobuf:"bytes,3,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	PreferredLanguage    string   `protobuf:"bytes,4,opt,name=preferred_language,json=preferredLanguage,proto3" json:"preferred_language,omitempty"`
	WantsNewsletter      bool     `protobuf:"varint,5,opt,name=wants_newsletter,json=wantsNewsletter,proto3" json:"wants_newsletter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignupWithEmailMsg) Reset()         { *m = SignupWithEmailMsg{} }
func (m *SignupWithEmailMsg) String() string { return proto.CompactTextString(m) }
func (*SignupWithEmailMsg) ProtoMessage()    {}
func (*SignupWithEmailMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_23188efcd8e5ff27, []int{3}
}

func (m *SignupWithEmailMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignupWithEmailMsg.Unmarshal(m, b)
}
func (m *SignupWithEmailMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignupWithEmailMsg.Marshal(b, m, deterministic)
}
func (m *SignupWithEmailMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignupWithEmailMsg.Merge(m, src)
}
func (m *SignupWithEmailMsg) XXX_Size() int {
	return xxx_messageInfo_SignupWithEmailMsg.Size(m)
}
func (m *SignupWithEmailMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_SignupWithEmailMsg.DiscardUnknown(m)
}

var xxx_messageInfo_SignupWithEmailMsg proto.InternalMessageInfo

func (m *SignupWithEmailMsg) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *SignupWithEmailMsg) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *SignupWithEmailMsg) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *SignupWithEmailMsg) GetPreferredLanguage() string {
	if m != nil {
		return m.PreferredLanguage
	}
	return ""
}

func (m *SignupWithEmailMsg) GetWantsNewsletter() bool {
	if m != nil {
		return m.WantsNewsletter
	}
	return false
}

type LoginWithEmailMsg struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	InstanceId           string   `protobuf:"bytes,3,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginWithEmailMsg) Reset()         { *m = LoginWithEmailMsg{} }
func (m *LoginWithEmailMsg) String() string { return proto.CompactTextString(m) }
func (*LoginWithEmailMsg) ProtoMessage()    {}
func (*LoginWithEmailMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_23188efcd8e5ff27, []int{4}
}

func (m *LoginWithEmailMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginWithEmailMsg.Unmarshal(m, b)
}
func (m *LoginWithEmailMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginWithEmailMsg.Marshal(b, m, deterministic)
}
func (m *LoginWithEmailMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginWithEmailMsg.Merge(m, src)
}
func (m *LoginWithEmailMsg) XXX_Size() int {
	return xxx_messageInfo_LoginWithEmailMsg.Size(m)
}
func (m *LoginWithEmailMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginWithEmailMsg.DiscardUnknown(m)
}

var xxx_messageInfo_LoginWithEmailMsg proto.InternalMessageInfo

func (m *LoginWithEmailMsg) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *LoginWithEmailMsg) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *LoginWithEmailMsg) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

type UserReference struct {
	Token                *TokenInfos `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	UserId               string      `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	InstanceId           string      `protobuf:"bytes,3,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UserReference) Reset()         { *m = UserReference{} }
func (m *UserReference) String() string { return proto.CompactTextString(m) }
func (*UserReference) ProtoMessage()    {}
func (*UserReference) Descriptor() ([]byte, []int) {
	return fileDescriptor_23188efcd8e5ff27, []int{5}
}

func (m *UserReference) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserReference.Unmarshal(m, b)
}
func (m *UserReference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserReference.Marshal(b, m, deterministic)
}
func (m *UserReference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserReference.Merge(m, src)
}
func (m *UserReference) XXX_Size() int {
	return xxx_messageInfo_UserReference.Size(m)
}
func (m *UserReference) XXX_DiscardUnknown() {
	xxx_messageInfo_UserReference.DiscardUnknown(m)
}

var xxx_messageInfo_UserReference proto.InternalMessageInfo

func (m *UserReference) GetToken() *TokenInfos {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *UserReference) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UserReference) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

type RefreshTokenRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	InstanceId           string   `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	RefreshToken         string   `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RefreshTokenRequest) Reset()         { *m = RefreshTokenRequest{} }
func (m *RefreshTokenRequest) String() string { return proto.CompactTextString(m) }
func (*RefreshTokenRequest) ProtoMessage()    {}
func (*RefreshTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_23188efcd8e5ff27, []int{6}
}

func (m *RefreshTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefreshTokenRequest.Unmarshal(m, b)
}
func (m *RefreshTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefreshTokenRequest.Marshal(b, m, deterministic)
}
func (m *RefreshTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefreshTokenRequest.Merge(m, src)
}
func (m *RefreshTokenRequest) XXX_Size() int {
	return xxx_messageInfo_RefreshTokenRequest.Size(m)
}
func (m *RefreshTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RefreshTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RefreshTokenRequest proto.InternalMessageInfo

func (m *RefreshTokenRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *RefreshTokenRequest) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *RefreshTokenRequest) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

type Profile struct {
	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	// identify the profile
	ConsentConfirmedAt int64 `protobuf:"varint,3,opt,name=consent_confirmed_at,json=consentConfirmedAt,proto3" json:"consent_confirmed_at,omitempty"`
	// consent to enter data for this indivildual
	AvatarId             string   `protobuf:"bytes,4,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"`
	CreatedAt            int64    `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Profile) Reset()         { *m = Profile{} }
func (m *Profile) String() string { return proto.CompactTextString(m) }
func (*Profile) ProtoMessage()    {}
func (*Profile) Descriptor() ([]byte, []int) {
	return fileDescriptor_23188efcd8e5ff27, []int{7}
}

func (m *Profile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Profile.Unmarshal(m, b)
}
func (m *Profile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Profile.Marshal(b, m, deterministic)
}
func (m *Profile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Profile.Merge(m, src)
}
func (m *Profile) XXX_Size() int {
	return xxx_messageInfo_Profile.Size(m)
}
func (m *Profile) XXX_DiscardUnknown() {
	xxx_messageInfo_Profile.DiscardUnknown(m)
}

var xxx_messageInfo_Profile proto.InternalMessageInfo

func (m *Profile) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Profile) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *Profile) GetConsentConfirmedAt() int64 {
	if m != nil {
		return m.ConsentConfirmedAt
	}
	return 0
}

func (m *Profile) GetAvatarId() string {
	if m != nil {
		return m.AvatarId
	}
	return ""
}

func (m *Profile) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

type ProfileRequest struct {
	Token                *TokenInfos `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Profile              *Profile    `protobuf:"bytes,2,opt,name=profile,proto3" json:"profile,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ProfileRequest) Reset()         { *m = ProfileRequest{} }
func (m *ProfileRequest) String() string { return proto.CompactTextString(m) }
func (*ProfileRequest) ProtoMessage()    {}
func (*ProfileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_23188efcd8e5ff27, []int{8}
}

func (m *ProfileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProfileRequest.Unmarshal(m, b)
}
func (m *ProfileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProfileRequest.Marshal(b, m, deterministic)
}
func (m *ProfileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProfileRequest.Merge(m, src)
}
func (m *ProfileRequest) XXX_Size() int {
	return xxx_messageInfo_ProfileRequest.Size(m)
}
func (m *ProfileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProfileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProfileRequest proto.InternalMessageInfo

func (m *ProfileRequest) GetToken() *TokenInfos {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *ProfileRequest) GetProfile() *Profile {
	if m != nil {
		return m.Profile
	}
	return nil
}

type UserAuthInfo struct {
	UserId               string     `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Roles                []string   `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
	InstanceId           string     `protobuf:"bytes,3,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	AccountId            string     `protobuf:"bytes,4,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Profiles             []*Profile `protobuf:"bytes,5,rep,name=profiles,proto3" json:"profiles,omitempty"`
	SelectedProfile      *Profile   `protobuf:"bytes,6,opt,name=selected_profile,json=selectedProfile,proto3" json:"selected_profile,omitempty"`
	AccountConfirmed     bool       `protobuf:"varint,7,opt,name=account_confirmed,json=accountConfirmed,proto3" json:"account_confirmed,omitempty"`
	PreferredLanguage    string     `protobuf:"bytes,8,opt,name=preferred_language,json=preferredLanguage,proto3" json:"preferred_language,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UserAuthInfo) Reset()         { *m = UserAuthInfo{} }
func (m *UserAuthInfo) String() string { return proto.CompactTextString(m) }
func (*UserAuthInfo) ProtoMessage()    {}
func (*UserAuthInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_23188efcd8e5ff27, []int{9}
}

func (m *UserAuthInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserAuthInfo.Unmarshal(m, b)
}
func (m *UserAuthInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserAuthInfo.Marshal(b, m, deterministic)
}
func (m *UserAuthInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserAuthInfo.Merge(m, src)
}
func (m *UserAuthInfo) XXX_Size() int {
	return xxx_messageInfo_UserAuthInfo.Size(m)
}
func (m *UserAuthInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserAuthInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserAuthInfo proto.InternalMessageInfo

func (m *UserAuthInfo) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UserAuthInfo) GetRoles() []string {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *UserAuthInfo) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *UserAuthInfo) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *UserAuthInfo) GetProfiles() []*Profile {
	if m != nil {
		return m.Profiles
	}
	return nil
}

func (m *UserAuthInfo) GetSelectedProfile() *Profile {
	if m != nil {
		return m.SelectedProfile
	}
	return nil
}

func (m *UserAuthInfo) GetAccountConfirmed() bool {
	if m != nil {
		return m.AccountConfirmed
	}
	return false
}

func (m *UserAuthInfo) GetPreferredLanguage() string {
	if m != nil {
		return m.PreferredLanguage
	}
	return ""
}

type PasswordChangeMsg struct {
	Token                *TokenInfos `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	OldPassword          string      `protobuf:"bytes,2,opt,name=old_password,json=oldPassword,proto3" json:"old_password,omitempty"`
	NewPassword          string      `protobuf:"bytes,3,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PasswordChangeMsg) Reset()         { *m = PasswordChangeMsg{} }
func (m *PasswordChangeMsg) String() string { return proto.CompactTextString(m) }
func (*PasswordChangeMsg) ProtoMessage()    {}
func (*PasswordChangeMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_23188efcd8e5ff27, []int{10}
}

func (m *PasswordChangeMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PasswordChangeMsg.Unmarshal(m, b)
}
func (m *PasswordChangeMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PasswordChangeMsg.Marshal(b, m, deterministic)
}
func (m *PasswordChangeMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PasswordChangeMsg.Merge(m, src)
}
func (m *PasswordChangeMsg) XXX_Size() int {
	return xxx_messageInfo_PasswordChangeMsg.Size(m)
}
func (m *PasswordChangeMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_PasswordChangeMsg.DiscardUnknown(m)
}

var xxx_messageInfo_PasswordChangeMsg proto.InternalMessageInfo

func (m *PasswordChangeMsg) GetToken() *TokenInfos {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *PasswordChangeMsg) GetOldPassword() string {
	if m != nil {
		return m.OldPassword
	}
	return ""
}

func (m *PasswordChangeMsg) GetNewPassword() string {
	if m != nil {
		return m.NewPassword
	}
	return ""
}

type EmailChangeMsg struct {
	Token                *TokenInfos `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	NewEmail             string      `protobuf:"bytes,2,opt,name=new_email,json=newEmail,proto3" json:"new_email,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *EmailChangeMsg) Reset()         { *m = EmailChangeMsg{} }
func (m *EmailChangeMsg) String() string { return proto.CompactTextString(m) }
func (*EmailChangeMsg) ProtoMessage()    {}
func (*EmailChangeMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_23188efcd8e5ff27, []int{11}
}

func (m *EmailChangeMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmailChangeMsg.Unmarshal(m, b)
}
func (m *EmailChangeMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmailChangeMsg.Marshal(b, m, deterministic)
}
func (m *EmailChangeMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmailChangeMsg.Merge(m, src)
}
func (m *EmailChangeMsg) XXX_Size() int {
	return xxx_messageInfo_EmailChangeMsg.Size(m)
}
func (m *EmailChangeMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_EmailChangeMsg.DiscardUnknown(m)
}

var xxx_messageInfo_EmailChangeMsg proto.InternalMessageInfo

func (m *EmailChangeMsg) GetToken() *TokenInfos {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *EmailChangeMsg) GetNewEmail() string {
	if m != nil {
		return m.NewEmail
	}
	return ""
}

type LanguageChangeMsg struct {
	Token                *TokenInfos `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	LanguageCode         string      `protobuf:"bytes,2,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *LanguageChangeMsg) Reset()         { *m = LanguageChangeMsg{} }
func (m *LanguageChangeMsg) String() string { return proto.CompactTextString(m) }
func (*LanguageChangeMsg) ProtoMessage()    {}
func (*LanguageChangeMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_23188efcd8e5ff27, []int{12}
}

func (m *LanguageChangeMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LanguageChangeMsg.Unmarshal(m, b)
}
func (m *LanguageChangeMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LanguageChangeMsg.Marshal(b, m, deterministic)
}
func (m *LanguageChangeMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LanguageChangeMsg.Merge(m, src)
}
func (m *LanguageChangeMsg) XXX_Size() int {
	return xxx_messageInfo_LanguageChangeMsg.Size(m)
}
func (m *LanguageChangeMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_LanguageChangeMsg.DiscardUnknown(m)
}

var xxx_messageInfo_LanguageChangeMsg proto.InternalMessageInfo

func (m *LanguageChangeMsg) GetToken() *TokenInfos {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *LanguageChangeMsg) GetLanguageCode() string {
	if m != nil {
		return m.LanguageCode
	}
	return ""
}

type ContactPreferencesMsg struct {
	Token                *TokenInfos         `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	ContactPreferences   *ContactPreferences `protobuf:"bytes,2,opt,name=contact_preferences,json=contactPreferences,proto3" json:"contact_preferences,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ContactPreferencesMsg) Reset()         { *m = ContactPreferencesMsg{} }
func (m *ContactPreferencesMsg) String() string { return proto.CompactTextString(m) }
func (*ContactPreferencesMsg) ProtoMessage()    {}
func (*ContactPreferencesMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_23188efcd8e5ff27, []int{13}
}

func (m *ContactPreferencesMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContactPreferencesMsg.Unmarshal(m, b)
}
func (m *ContactPreferencesMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContactPreferencesMsg.Marshal(b, m, deterministic)
}
func (m *ContactPreferencesMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactPreferencesMsg.Merge(m, src)
}
func (m *ContactPreferencesMsg) XXX_Size() int {
	return xxx_messageInfo_ContactPreferencesMsg.Size(m)
}
func (m *ContactPreferencesMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactPreferencesMsg.DiscardUnknown(m)
}

var xxx_messageInfo_ContactPreferencesMsg proto.InternalMessageInfo

func (m *ContactPreferencesMsg) GetToken() *TokenInfos {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *ContactPreferencesMsg) GetContactPreferences() *ContactPreferences {
	if m != nil {
		return m.ContactPreferences
	}
	return nil
}

type ContactInfoMsg struct {
	Token                *TokenInfos  `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	ContactInfo          *ContactInfo `protobuf:"bytes,2,opt,name=contact_info,json=contactInfo,proto3" json:"contact_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ContactInfoMsg) Reset()         { *m = ContactInfoMsg{} }
func (m *ContactInfoMsg) String() string { return proto.CompactTextString(m) }
func (*ContactInfoMsg) ProtoMessage()    {}
func (*ContactInfoMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_23188efcd8e5ff27, []int{14}
}

func (m *ContactInfoMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContactInfoMsg.Unmarshal(m, b)
}
func (m *ContactInfoMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContactInfoMsg.Marshal(b, m, deterministic)
}
func (m *ContactInfoMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactInfoMsg.Merge(m, src)
}
func (m *ContactInfoMsg) XXX_Size() int {
	return xxx_messageInfo_ContactInfoMsg.Size(m)
}
func (m *ContactInfoMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactInfoMsg.DiscardUnknown(m)
}

var xxx_messageInfo_ContactInfoMsg proto.InternalMessageInfo

func (m *ContactInfoMsg) GetToken() *TokenInfos {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *ContactInfoMsg) GetContactInfo() *ContactInfo {
	if m != nil {
		return m.ContactInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*User)(nil), "inf.user_management_api.User")
	proto.RegisterType((*User_Account)(nil), "inf.user_management_api.User.Account")
	proto.RegisterType((*User_Timestamps)(nil), "inf.user_management_api.User.Timestamps")
	proto.RegisterType((*ContactInfo)(nil), "inf.user_management_api.ContactInfo")
	proto.RegisterType((*ContactPreferences)(nil), "inf.user_management_api.ContactPreferences")
	proto.RegisterType((*SignupWithEmailMsg)(nil), "inf.user_management_api.SignupWithEmailMsg")
	proto.RegisterType((*LoginWithEmailMsg)(nil), "inf.user_management_api.LoginWithEmailMsg")
	proto.RegisterType((*UserReference)(nil), "inf.user_management_api.UserReference")
	proto.RegisterType((*RefreshTokenRequest)(nil), "inf.user_management_api.RefreshTokenRequest")
	proto.RegisterType((*Profile)(nil), "inf.user_management_api.Profile")
	proto.RegisterType((*ProfileRequest)(nil), "inf.user_management_api.ProfileRequest")
	proto.RegisterType((*UserAuthInfo)(nil), "inf.user_management_api.UserAuthInfo")
	proto.RegisterType((*PasswordChangeMsg)(nil), "inf.user_management_api.PasswordChangeMsg")
	proto.RegisterType((*EmailChangeMsg)(nil), "inf.user_management_api.EmailChangeMsg")
	proto.RegisterType((*LanguageChangeMsg)(nil), "inf.user_management_api.LanguageChangeMsg")
	proto.RegisterType((*ContactPreferencesMsg)(nil), "inf.user_management_api.ContactPreferencesMsg")
	proto.RegisterType((*ContactInfoMsg)(nil), "inf.user_management_api.ContactInfoMsg")
}

func init() {
	proto.RegisterFile("user-management-api.proto", fileDescriptor_23188efcd8e5ff27)
}

var fileDescriptor_23188efcd8e5ff27 = []byte{
	// 1265 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0xdb, 0x8e, 0x1b, 0x45,
	0x13, 0xfe, 0xc7, 0x5e, 0xaf, 0xed, 0xf2, 0x61, 0xd7, 0x9d, 0xc3, 0xfa, 0x77, 0x14, 0xb1, 0x99,
	0x10, 0x58, 0x48, 0xd6, 0x41, 0x8b, 0xc4, 0x05, 0x42, 0x42, 0x9b, 0x4d, 0x94, 0x58, 0x39, 0x68,
	0x35, 0xbb, 0x51, 0x24, 0x84, 0x18, 0xf5, 0xce, 0xb4, 0xed, 0x51, 0xc6, 0xdd, 0xc3, 0x74, 0x3b,
	0x56, 0xb8, 0xe2, 0x0d, 0xb8, 0xe4, 0x06, 0xae, 0x78, 0x12, 0xde, 0x82, 0x07, 0xe0, 0x2d, 0xb8,
	0x41, 0x7d, 0xb2, 0xc7, 0x76, 0x66, 0x6d, 0x2b, 0xe1, 0xce, 0x53, 0xd5, 0x5d, 0x55, 0xfd, 0x55,
	0xd5, 0x57, 0x65, 0xf8, 0xff, 0x98, 0x93, 0xf4, 0x70, 0x84, 0x29, 0x1e, 0x90, 0x11, 0xa1, 0xe2,
	0x10, 0x27, 0x51, 0x37, 0x49, 0x99, 0x60, 0x68, 0x2f, 0xa2, 0xfd, 0xae, 0x54, 0xfb, 0x33, 0xb5,
	0x8f, 0x93, 0xa8, 0x83, 0x06, 0x31, 0xbb, 0xc0, 0xf1, 0xa1, 0x78, 0x9b, 0x10, 0xae, 0x0f, 0x77,
	0x6e, 0x0c, 0x18, 0x1b, 0xc4, 0xe4, 0xbe, 0xfa, 0xba, 0x18, 0xf7, 0xef, 0x93, 0x51, 0x22, 0xde,
	0x6a, 0xa5, 0xfb, 0x57, 0x09, 0xb6, 0x5e, 0x72, 0x92, 0xa2, 0x26, 0x14, 0xa2, 0xb0, 0xed, 0xec,
	0x3b, 0x07, 0x55, 0xaf, 0x10, 0x85, 0xe8, 0x5b, 0x28, 0xe3, 0x20, 0x60, 0x63, 0x2a, 0xda, 0x85,
	0x7d, 0xe7, 0xa0, 0x76, 0x74, 0xa7, 0x9b, 0xe3, 0xb4, 0x2b, 0xef, 0x77, 0x8f, 0xf5, 0x61, 0xcf,
	0xde, 0x42, 0x57, 0xa1, 0x94, 0xb2, 0x98, 0xf0, 0x76, 0x71, 0xbf, 0x78, 0x50, 0xf5, 0xf4, 0x07,
	0x7a, 0x02, 0x20, 0xa2, 0x11, 0xe1, 0x02, 0x8f, 0x12, 0xde, 0xde, 0x52, 0x96, 0x0f, 0x2e, 0xb7,
	0x7c, 0x3e, 0x3d, 0xef, 0x65, 0xee, 0xa2, 0x6f, 0xa0, 0x92, 0xa4, 0xac, 0x1f, 0x49, 0x17, 0xa5,
	0xfd, 0xe2, 0x41, 0xed, 0x68, 0x3f, 0xd7, 0xce, 0xa9, 0x3e, 0xe8, 0x4d, 0x6f, 0xa0, 0xef, 0xe1,
	0x4a, 0xc0, 0xa8, 0xc0, 0x81, 0xf0, 0x93, 0x94, 0xf4, 0x49, 0x4a, 0x68, 0x40, 0x78, 0x7b, 0x5b,
	0x05, 0x74, 0x37, 0xd7, 0xd0, 0x89, 0xbe, 0x73, 0x3a, 0xbb, 0xe2, 0xa1, 0x60, 0x49, 0x86, 0x7a,
	0xd0, 0xb0, 0xd6, 0x23, 0xda, 0x67, 0xbc, 0x5d, 0x56, 0x01, 0x7e, 0xbc, 0xca, 0x6e, 0x8f, 0xf6,
	0x99, 0x57, 0x0f, 0x66, 0x1f, 0xbc, 0xf3, 0xbb, 0x03, 0x65, 0x83, 0x2d, 0x42, 0xb0, 0x25, 0x13,
	0x6b, 0xb2, 0xa4, 0x7e, 0xa3, 0x9b, 0x00, 0x06, 0x71, 0x3f, 0x0a, 0x55, 0xaa, 0xaa, 0x5e, 0xd5,
	0x48, 0x7a, 0x21, 0xfa, 0x02, 0xae, 0x5a, 0x75, 0xc0, 0x68, 0x3f, 0x4a, 0x47, 0x24, 0xf4, 0xb1,
	0x68, 0x17, 0xf7, 0x9d, 0x83, 0xa2, 0x87, 0x8c, 0xee, 0xc4, 0xaa, 0x8e, 0x05, 0x3a, 0x04, 0xa4,
	0x11, 0x49, 0x49, 0xe8, 0xc7, 0x98, 0x0e, 0xc6, 0x78, 0x40, 0x54, 0xa6, 0xaa, 0x5e, 0x6b, 0xaa,
	0x79, 0x66, 0x14, 0x9d, 0x5f, 0x1d, 0x80, 0x59, 0x86, 0x64, 0x38, 0x41, 0x4a, 0xb0, 0xd0, 0x5e,
	0x1c, 0xe5, 0xa5, 0x6a, 0x24, 0xc7, 0x42, 0xaa, 0xc7, 0x49, 0x68, 0xd5, 0x05, 0xad, 0x36, 0x12,
	0xad, 0x8e, 0x31, 0x17, 0x7e, 0xcc, 0x06, 0x11, 0x35, 0x31, 0x56, 0xa5, 0xe4, 0x99, 0x14, 0xa0,
	0x7b, 0x80, 0x94, 0x5a, 0xb0, 0xd7, 0x84, 0xfa, 0x29, 0xe9, 0xa7, 0x84, 0x0f, 0x55, 0x68, 0x45,
	0x6f, 0x57, 0x6a, 0xce, 0xa5, 0xc2, 0xd3, 0x72, 0xf7, 0x17, 0x07, 0x6a, 0x19, 0x5c, 0x97, 0x2a,
	0xdc, 0xa2, 0x59, 0xc8, 0xa0, 0x79, 0x0b, 0xea, 0xef, 0x80, 0xa9, 0x16, 0x64, 0xf0, 0xb9, 0x0e,
	0x25, 0x32, 0xc2, 0x51, 0xac, 0x21, 0x79, 0xf2, 0x3f, 0x4f, 0x7f, 0x4a, 0x79, 0x32, 0x64, 0x94,
	0xb4, 0x4b, 0x56, 0xae, 0x3e, 0x1f, 0x54, 0xa1, 0x8c, 0xc3, 0x30, 0x25, 0x9c, 0xbb, 0x3f, 0x01,
	0x5a, 0x2e, 0x20, 0xf4, 0x15, 0xec, 0xf1, 0xf1, 0x05, 0x0f, 0xd2, 0xe8, 0x82, 0x84, 0xbe, 0x60,
	0x3e, 0x25, 0x93, 0x98, 0x08, 0x41, 0x52, 0x15, 0x6c, 0xc5, 0xbb, 0x36, 0x53, 0x9f, 0xb3, 0x17,
	0x56, 0x29, 0xd1, 0xe0, 0x84, 0x86, 0xf2, 0x38, 0xd7, 0x22, 0x5f, 0xb0, 0x76, 0x41, 0x75, 0xdb,
	0xae, 0xd4, 0xbc, 0x98, 0x2a, 0xce, 0x99, 0xfb, 0xa7, 0x03, 0xe8, 0x2c, 0x1a, 0xd0, 0x71, 0xf2,
	0x2a, 0x12, 0xc3, 0x47, 0x32, 0xe4, 0xe7, 0x7c, 0x20, 0xbb, 0x54, 0xbf, 0x46, 0xe3, 0x62, 0xde,
	0xd2, 0x81, 0x4a, 0x82, 0x39, 0x9f, 0xb0, 0xd4, 0x96, 0xd4, 0xf4, 0x1b, 0x7d, 0x04, 0xb5, 0x88,
	0x72, 0x81, 0x69, 0x40, 0x64, 0xc5, 0x15, 0x95, 0x1a, 0xac, 0xa8, 0x17, 0x6e, 0x58, 0x40, 0xe8,
	0x33, 0xd8, 0x9d, 0x60, 0x2a, 0x78, 0xe6, 0x1d, 0x0a, 0xc2, 0x8a, 0xb7, 0xa3, 0xe4, 0xb3, 0x57,
	0xb8, 0x7d, 0x68, 0xa9, 0x42, 0xf8, 0x8f, 0x5f, 0xe0, 0x26, 0xd0, 0x90, 0xcc, 0xe3, 0xd9, 0x1c,
	0xa1, 0x3b, 0x50, 0x52, 0x35, 0xa7, 0x7c, 0xd4, 0x8e, 0x76, 0x54, 0x1f, 0xab, 0x62, 0x53, 0x4d,
	0xea, 0x69, 0x2d, 0xda, 0x83, 0xb2, 0x6a, 0xee, 0x69, 0x23, 0x6e, 0xcb, 0xcf, 0xde, 0x1a, 0x1e,
	0x05, 0x5c, 0x31, 0x65, 0x6b, 0x4a, 0xf8, 0xc7, 0x31, 0xe1, 0x22, 0x6b, 0xd0, 0xb9, 0xcc, 0x60,
	0x61, 0x29, 0x09, 0xb7, 0xa1, 0x61, 0xfa, 0x43, 0x77, 0x8b, 0xf1, 0x59, 0x4f, 0x33, 0x5e, 0xdc,
	0x3f, 0x1c, 0x28, 0x1b, 0x6a, 0x5c, 0xea, 0x8e, 0x0e, 0x54, 0x68, 0x14, 0xbc, 0xa6, 0x78, 0x64,
	0x3b, 0x64, 0xfa, 0x2d, 0x49, 0x25, 0x60, 0x94, 0x93, 0x1c, 0x52, 0x31, 0xba, 0x2c, 0xa9, 0xdc,
	0x80, 0x2a, 0x7e, 0x83, 0x05, 0x56, 0x4f, 0xd1, 0xa5, 0x50, 0xd1, 0x82, 0x5e, 0xb8, 0xc0, 0x19,
	0xa5, 0x05, 0xce, 0x70, 0x39, 0x34, 0x2d, 0x7f, 0x1b, 0x58, 0xd6, 0x4c, 0xc7, 0xd7, 0x50, 0x36,
	0x7c, 0x6f, 0x46, 0xd8, 0xea, 0x01, 0x61, 0x2f, 0xb8, 0x7f, 0x17, 0xa0, 0x2e, 0x6b, 0xe0, 0x78,
	0x2c, 0x86, 0x8a, 0x3d, 0x72, 0x53, 0x31, 0x9d, 0x73, 0x85, 0xec, 0x9c, 0x5b, 0xd9, 0x25, 0xf3,
	0xbc, 0xbd, 0xb5, 0xc8, 0xdb, 0xef, 0x37, 0xdd, 0x9e, 0xc2, 0x2e, 0x27, 0x31, 0x09, 0x24, 0xa4,
	0x16, 0x82, 0xed, 0x35, 0x21, 0xd8, 0xb1, 0x37, 0x6d, 0x65, 0xdc, 0x85, 0xd6, 0xd2, 0x08, 0x69,
	0x97, 0x55, 0x87, 0xee, 0x2e, 0xce, 0x8f, 0x9c, 0xe6, 0xaf, 0xe4, 0x34, 0xbf, 0xfb, 0xb3, 0x03,
	0xad, 0x53, 0xd3, 0x97, 0x27, 0x43, 0x4c, 0x07, 0x44, 0xb6, 0xf4, 0x9a, 0xf9, 0xbd, 0x05, 0x75,
	0x16, 0x87, 0xfe, 0x42, 0x9f, 0xd7, 0x58, 0x1c, 0x5a, 0x93, 0xf2, 0x08, 0x25, 0x93, 0xd9, 0x11,
	0x9d, 0x87, 0x1a, 0x25, 0x13, 0x7b, 0xc4, 0x3d, 0x87, 0xa6, 0xe2, 0x92, 0x8d, 0xdd, 0xdf, 0x80,
	0xaa, 0xb4, 0xad, 0xc9, 0xc7, 0xb6, 0x08, 0x99, 0x28, 0x63, 0xae, 0x0f, 0x2d, 0xfb, 0xc8, 0x8d,
	0x0d, 0xdf, 0x86, 0x86, 0x45, 0xce, 0x0f, 0x58, 0x68, 0xfb, 0xaf, 0x6e, 0x85, 0x27, 0x2c, 0x24,
	0xee, 0x6f, 0x0e, 0x5c, 0x5b, 0x1e, 0x26, 0x1b, 0x78, 0xc9, 0xd9, 0x80, 0x0a, 0x1f, 0x64, 0x03,
	0x92, 0x89, 0x6d, 0x66, 0x86, 0xef, 0x06, 0x71, 0x3d, 0x86, 0x7a, 0x76, 0x77, 0x32, 0x01, 0xad,
	0xb7, 0x3a, 0xd5, 0x32, 0xab, 0xd3, 0xd1, 0x3f, 0x00, 0x2d, 0xd9, 0xc2, 0xcf, 0xa7, 0xe7, 0x8f,
	0x93, 0x08, 0x1d, 0xc2, 0xf6, 0x99, 0xc0, 0x62, 0xcc, 0xd1, 0xf5, 0xae, 0x5e, 0x8c, 0xbb, 0x76,
	0x31, 0xee, 0x3e, 0x92, 0x8b, 0x71, 0xa7, 0xa6, 0x5c, 0x99, 0x43, 0x01, 0x34, 0xe7, 0x47, 0x0e,
	0xfa, 0x3c, 0x37, 0x92, 0xa5, 0xd9, 0xd4, 0xb9, 0x7c, 0x67, 0x9e, 0x72, 0x0b, 0x81, 0x9d, 0x85,
	0xd1, 0x8c, 0xf2, 0x13, 0xb0, 0x3c, 0xc4, 0xd7, 0x75, 0xf3, 0x02, 0x5a, 0x27, 0x43, 0x12, 0xbc,
	0xce, 0x4e, 0x1a, 0x74, 0x2f, 0xf7, 0xee, 0x3b, 0x06, 0xd2, 0x3c, 0x36, 0x4f, 0xa1, 0x99, 0x5d,
	0xb8, 0x48, 0xf8, 0x3e, 0xc6, 0x7c, 0x68, 0x9c, 0x4d, 0x22, 0x11, 0x0c, 0x2d, 0xed, 0x7c, 0xba,
	0x92, 0xa9, 0x8c, 0x99, 0x35, 0x5f, 0x7f, 0x0a, 0xe5, 0xc7, 0x44, 0xa8, 0xff, 0x3a, 0x9f, 0x5c,
	0x7a, 0x63, 0x3a, 0xf6, 0x3b, 0x37, 0x2f, 0x3d, 0x87, 0x7a, 0xd0, 0xd4, 0xbd, 0x3d, 0xa5, 0x9b,
	0xfc, 0xda, 0x58, 0x22, 0xb9, 0xf9, 0xd7, 0xff, 0x00, 0x57, 0xb5, 0xc6, 0xac, 0xfa, 0xbd, 0x87,
	0xba, 0x0c, 0xf2, 0x41, 0x98, 0xe7, 0xac, 0x55, 0xa1, 0x3e, 0x84, 0xc6, 0x43, 0x12, 0x13, 0x61,
	0xed, 0xaf, 0x0d, 0xc1, 0x5c, 0x94, 0x21, 0xec, 0x99, 0x07, 0x2f, 0x6d, 0x71, 0x97, 0x74, 0xc5,
	0x22, 0x0d, 0xae, 0x8a, 0xf5, 0x25, 0xd4, 0xce, 0xf0, 0x1b, 0xb2, 0x71, 0x1d, 0xac, 0x30, 0xfb,
	0x0a, 0x1a, 0x1e, 0x19, 0xb1, 0x0f, 0x6f, 0x38, 0x82, 0xf6, 0x4b, 0xf5, 0x0f, 0xe6, 0x1d, 0xbb,
	0x7d, 0x77, 0x03, 0x1e, 0x5d, 0x03, 0x1a, 0x0f, 0x2a, 0xc7, 0x61, 0xb8, 0xaa, 0x34, 0xe6, 0x79,
	0x77, 0x0d, 0xb8, 0x35, 0x2e, 0x1f, 0xd4, 0xec, 0x83, 0xd2, 0x77, 0x45, 0x9c, 0x44, 0x17, 0xdb,
	0x8a, 0x5c, 0xbf, 0xfc, 0x37, 0x00, 0x00, 0xff, 0xff, 0x99, 0x83, 0x84, 0xf4, 0xcd, 0x10, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UserManagementApiClient is the client API for UserManagementApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserManagementApiClient interface {
	Status(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Status, error)
	// Auth and Token handling:
	LoginWithEmail(ctx context.Context, in *LoginWithEmailMsg, opts ...grpc.CallOption) (*UserAuthInfo, error)
	SignupWithEmail(ctx context.Context, in *SignupWithEmailMsg, opts ...grpc.CallOption) (*UserAuthInfo, error)
	CheckRefreshToken(ctx context.Context, in *RefreshTokenRequest, opts ...grpc.CallOption) (*Status, error)
	TokenRefreshed(ctx context.Context, in *RefreshTokenRequest, opts ...grpc.CallOption) (*Status, error)
	// send newly generated refresh token
	SwitchProfile(ctx context.Context, in *ProfileRequest, opts ...grpc.CallOption) (*UserAuthInfo, error)
	// User properties:
	GetUser(ctx context.Context, in *UserReference, opts ...grpc.CallOption) (*User, error)
	// Account methods:
	ChangePassword(ctx context.Context, in *PasswordChangeMsg, opts ...grpc.CallOption) (*Status, error)
	ChangeAccountIDEmail(ctx context.Context, in *EmailChangeMsg, opts ...grpc.CallOption) (*User, error)
	DeleteAccount(ctx context.Context, in *UserReference, opts ...grpc.CallOption) (*Status, error)
	ChangePreferredLanguage(ctx context.Context, in *LanguageChangeMsg, opts ...grpc.CallOption) (*User, error)
	// Profile methods:
	SaveProfile(ctx context.Context, in *ProfileRequest, opts ...grpc.CallOption) (*User, error)
	RemoveProfile(ctx context.Context, in *ProfileRequest, opts ...grpc.CallOption) (*User, error)
	// Contacts:
	UpdateContactPreferences(ctx context.Context, in *ContactPreferencesMsg, opts ...grpc.CallOption) (*User, error)
	AddEmail(ctx context.Context, in *ContactInfoMsg, opts ...grpc.CallOption) (*User, error)
	RemoveEmail(ctx context.Context, in *ContactInfoMsg, opts ...grpc.CallOption) (*User, error)
}

type userManagementApiClient struct {
	cc grpc.ClientConnInterface
}

func NewUserManagementApiClient(cc grpc.ClientConnInterface) UserManagementApiClient {
	return &userManagementApiClient{cc}
}

func (c *userManagementApiClient) Status(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := c.cc.Invoke(ctx, "/inf.user_management_api.UserManagementApi/Status", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userManagementApiClient) LoginWithEmail(ctx context.Context, in *LoginWithEmailMsg, opts ...grpc.CallOption) (*UserAuthInfo, error) {
	out := new(UserAuthInfo)
	err := c.cc.Invoke(ctx, "/inf.user_management_api.UserManagementApi/LoginWithEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userManagementApiClient) SignupWithEmail(ctx context.Context, in *SignupWithEmailMsg, opts ...grpc.CallOption) (*UserAuthInfo, error) {
	out := new(UserAuthInfo)
	err := c.cc.Invoke(ctx, "/inf.user_management_api.UserManagementApi/SignupWithEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userManagementApiClient) CheckRefreshToken(ctx context.Context, in *RefreshTokenRequest, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := c.cc.Invoke(ctx, "/inf.user_management_api.UserManagementApi/CheckRefreshToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userManagementApiClient) TokenRefreshed(ctx context.Context, in *RefreshTokenRequest, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := c.cc.Invoke(ctx, "/inf.user_management_api.UserManagementApi/TokenRefreshed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userManagementApiClient) SwitchProfile(ctx context.Context, in *ProfileRequest, opts ...grpc.CallOption) (*UserAuthInfo, error) {
	out := new(UserAuthInfo)
	err := c.cc.Invoke(ctx, "/inf.user_management_api.UserManagementApi/SwitchProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userManagementApiClient) GetUser(ctx context.Context, in *UserReference, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/inf.user_management_api.UserManagementApi/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userManagementApiClient) ChangePassword(ctx context.Context, in *PasswordChangeMsg, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := c.cc.Invoke(ctx, "/inf.user_management_api.UserManagementApi/ChangePassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userManagementApiClient) ChangeAccountIDEmail(ctx context.Context, in *EmailChangeMsg, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/inf.user_management_api.UserManagementApi/ChangeAccountIDEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userManagementApiClient) DeleteAccount(ctx context.Context, in *UserReference, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := c.cc.Invoke(ctx, "/inf.user_management_api.UserManagementApi/DeleteAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userManagementApiClient) ChangePreferredLanguage(ctx context.Context, in *LanguageChangeMsg, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/inf.user_management_api.UserManagementApi/ChangePreferredLanguage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userManagementApiClient) SaveProfile(ctx context.Context, in *ProfileRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/inf.user_management_api.UserManagementApi/SaveProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userManagementApiClient) RemoveProfile(ctx context.Context, in *ProfileRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/inf.user_management_api.UserManagementApi/RemoveProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userManagementApiClient) UpdateContactPreferences(ctx context.Context, in *ContactPreferencesMsg, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/inf.user_management_api.UserManagementApi/UpdateContactPreferences", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userManagementApiClient) AddEmail(ctx context.Context, in *ContactInfoMsg, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/inf.user_management_api.UserManagementApi/AddEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userManagementApiClient) RemoveEmail(ctx context.Context, in *ContactInfoMsg, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/inf.user_management_api.UserManagementApi/RemoveEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserManagementApiServer is the server API for UserManagementApi service.
type UserManagementApiServer interface {
	Status(context.Context, *empty.Empty) (*Status, error)
	// Auth and Token handling:
	LoginWithEmail(context.Context, *LoginWithEmailMsg) (*UserAuthInfo, error)
	SignupWithEmail(context.Context, *SignupWithEmailMsg) (*UserAuthInfo, error)
	CheckRefreshToken(context.Context, *RefreshTokenRequest) (*Status, error)
	TokenRefreshed(context.Context, *RefreshTokenRequest) (*Status, error)
	// send newly generated refresh token
	SwitchProfile(context.Context, *ProfileRequest) (*UserAuthInfo, error)
	// User properties:
	GetUser(context.Context, *UserReference) (*User, error)
	// Account methods:
	ChangePassword(context.Context, *PasswordChangeMsg) (*Status, error)
	ChangeAccountIDEmail(context.Context, *EmailChangeMsg) (*User, error)
	DeleteAccount(context.Context, *UserReference) (*Status, error)
	ChangePreferredLanguage(context.Context, *LanguageChangeMsg) (*User, error)
	// Profile methods:
	SaveProfile(context.Context, *ProfileRequest) (*User, error)
	RemoveProfile(context.Context, *ProfileRequest) (*User, error)
	// Contacts:
	UpdateContactPreferences(context.Context, *ContactPreferencesMsg) (*User, error)
	AddEmail(context.Context, *ContactInfoMsg) (*User, error)
	RemoveEmail(context.Context, *ContactInfoMsg) (*User, error)
}

// UnimplementedUserManagementApiServer can be embedded to have forward compatible implementations.
type UnimplementedUserManagementApiServer struct {
}

func (*UnimplementedUserManagementApiServer) Status(ctx context.Context, req *empty.Empty) (*Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Status not implemented")
}
func (*UnimplementedUserManagementApiServer) LoginWithEmail(ctx context.Context, req *LoginWithEmailMsg) (*UserAuthInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoginWithEmail not implemented")
}
func (*UnimplementedUserManagementApiServer) SignupWithEmail(ctx context.Context, req *SignupWithEmailMsg) (*UserAuthInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignupWithEmail not implemented")
}
func (*UnimplementedUserManagementApiServer) CheckRefreshToken(ctx context.Context, req *RefreshTokenRequest) (*Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckRefreshToken not implemented")
}
func (*UnimplementedUserManagementApiServer) TokenRefreshed(ctx context.Context, req *RefreshTokenRequest) (*Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TokenRefreshed not implemented")
}
func (*UnimplementedUserManagementApiServer) SwitchProfile(ctx context.Context, req *ProfileRequest) (*UserAuthInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SwitchProfile not implemented")
}
func (*UnimplementedUserManagementApiServer) GetUser(ctx context.Context, req *UserReference) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUser not implemented")
}
func (*UnimplementedUserManagementApiServer) ChangePassword(ctx context.Context, req *PasswordChangeMsg) (*Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangePassword not implemented")
}
func (*UnimplementedUserManagementApiServer) ChangeAccountIDEmail(ctx context.Context, req *EmailChangeMsg) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeAccountIDEmail not implemented")
}
func (*UnimplementedUserManagementApiServer) DeleteAccount(ctx context.Context, req *UserReference) (*Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAccount not implemented")
}
func (*UnimplementedUserManagementApiServer) ChangePreferredLanguage(ctx context.Context, req *LanguageChangeMsg) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangePreferredLanguage not implemented")
}
func (*UnimplementedUserManagementApiServer) SaveProfile(ctx context.Context, req *ProfileRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveProfile not implemented")
}
func (*UnimplementedUserManagementApiServer) RemoveProfile(ctx context.Context, req *ProfileRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveProfile not implemented")
}
func (*UnimplementedUserManagementApiServer) UpdateContactPreferences(ctx context.Context, req *ContactPreferencesMsg) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateContactPreferences not implemented")
}
func (*UnimplementedUserManagementApiServer) AddEmail(ctx context.Context, req *ContactInfoMsg) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddEmail not implemented")
}
func (*UnimplementedUserManagementApiServer) RemoveEmail(ctx context.Context, req *ContactInfoMsg) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveEmail not implemented")
}

func RegisterUserManagementApiServer(s *grpc.Server, srv UserManagementApiServer) {
	s.RegisterService(&_UserManagementApi_serviceDesc, srv)
}

func _UserManagementApi_Status_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserManagementApiServer).Status(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inf.user_management_api.UserManagementApi/Status",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserManagementApiServer).Status(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserManagementApi_LoginWithEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginWithEmailMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserManagementApiServer).LoginWithEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inf.user_management_api.UserManagementApi/LoginWithEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserManagementApiServer).LoginWithEmail(ctx, req.(*LoginWithEmailMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserManagementApi_SignupWithEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignupWithEmailMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserManagementApiServer).SignupWithEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inf.user_management_api.UserManagementApi/SignupWithEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserManagementApiServer).SignupWithEmail(ctx, req.(*SignupWithEmailMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserManagementApi_CheckRefreshToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RefreshTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserManagementApiServer).CheckRefreshToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inf.user_management_api.UserManagementApi/CheckRefreshToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserManagementApiServer).CheckRefreshToken(ctx, req.(*RefreshTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserManagementApi_TokenRefreshed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RefreshTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserManagementApiServer).TokenRefreshed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inf.user_management_api.UserManagementApi/TokenRefreshed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserManagementApiServer).TokenRefreshed(ctx, req.(*RefreshTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserManagementApi_SwitchProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserManagementApiServer).SwitchProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inf.user_management_api.UserManagementApi/SwitchProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserManagementApiServer).SwitchProfile(ctx, req.(*ProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserManagementApi_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserReference)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserManagementApiServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inf.user_management_api.UserManagementApi/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserManagementApiServer).GetUser(ctx, req.(*UserReference))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserManagementApi_ChangePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PasswordChangeMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserManagementApiServer).ChangePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inf.user_management_api.UserManagementApi/ChangePassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserManagementApiServer).ChangePassword(ctx, req.(*PasswordChangeMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserManagementApi_ChangeAccountIDEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmailChangeMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserManagementApiServer).ChangeAccountIDEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inf.user_management_api.UserManagementApi/ChangeAccountIDEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserManagementApiServer).ChangeAccountIDEmail(ctx, req.(*EmailChangeMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserManagementApi_DeleteAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserReference)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserManagementApiServer).DeleteAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inf.user_management_api.UserManagementApi/DeleteAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserManagementApiServer).DeleteAccount(ctx, req.(*UserReference))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserManagementApi_ChangePreferredLanguage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LanguageChangeMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserManagementApiServer).ChangePreferredLanguage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inf.user_management_api.UserManagementApi/ChangePreferredLanguage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserManagementApiServer).ChangePreferredLanguage(ctx, req.(*LanguageChangeMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserManagementApi_SaveProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserManagementApiServer).SaveProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inf.user_management_api.UserManagementApi/SaveProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserManagementApiServer).SaveProfile(ctx, req.(*ProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserManagementApi_RemoveProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserManagementApiServer).RemoveProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inf.user_management_api.UserManagementApi/RemoveProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserManagementApiServer).RemoveProfile(ctx, req.(*ProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserManagementApi_UpdateContactPreferences_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContactPreferencesMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserManagementApiServer).UpdateContactPreferences(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inf.user_management_api.UserManagementApi/UpdateContactPreferences",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserManagementApiServer).UpdateContactPreferences(ctx, req.(*ContactPreferencesMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserManagementApi_AddEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContactInfoMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserManagementApiServer).AddEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inf.user_management_api.UserManagementApi/AddEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserManagementApiServer).AddEmail(ctx, req.(*ContactInfoMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserManagementApi_RemoveEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContactInfoMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserManagementApiServer).RemoveEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inf.user_management_api.UserManagementApi/RemoveEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserManagementApiServer).RemoveEmail(ctx, req.(*ContactInfoMsg))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserManagementApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "inf.user_management_api.UserManagementApi",
	HandlerType: (*UserManagementApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Status",
			Handler:    _UserManagementApi_Status_Handler,
		},
		{
			MethodName: "LoginWithEmail",
			Handler:    _UserManagementApi_LoginWithEmail_Handler,
		},
		{
			MethodName: "SignupWithEmail",
			Handler:    _UserManagementApi_SignupWithEmail_Handler,
		},
		{
			MethodName: "CheckRefreshToken",
			Handler:    _UserManagementApi_CheckRefreshToken_Handler,
		},
		{
			MethodName: "TokenRefreshed",
			Handler:    _UserManagementApi_TokenRefreshed_Handler,
		},
		{
			MethodName: "SwitchProfile",
			Handler:    _UserManagementApi_SwitchProfile_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _UserManagementApi_GetUser_Handler,
		},
		{
			MethodName: "ChangePassword",
			Handler:    _UserManagementApi_ChangePassword_Handler,
		},
		{
			MethodName: "ChangeAccountIDEmail",
			Handler:    _UserManagementApi_ChangeAccountIDEmail_Handler,
		},
		{
			MethodName: "DeleteAccount",
			Handler:    _UserManagementApi_DeleteAccount_Handler,
		},
		{
			MethodName: "ChangePreferredLanguage",
			Handler:    _UserManagementApi_ChangePreferredLanguage_Handler,
		},
		{
			MethodName: "SaveProfile",
			Handler:    _UserManagementApi_SaveProfile_Handler,
		},
		{
			MethodName: "RemoveProfile",
			Handler:    _UserManagementApi_RemoveProfile_Handler,
		},
		{
			MethodName: "UpdateContactPreferences",
			Handler:    _UserManagementApi_UpdateContactPreferences_Handler,
		},
		{
			MethodName: "AddEmail",
			Handler:    _UserManagementApi_AddEmail_Handler,
		},
		{
			MethodName: "RemoveEmail",
			Handler:    _UserManagementApi_RemoveEmail_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user-management-api.proto",
}
